{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport ChatHeader from '../components/ChatHeader.vue';\nimport ChatFrame from '../components/ChatFrame.vue';\nimport MessageComponent from '../components/MessageComponent.vue';\nimport UserInput from '../components/UserInput.vue';\nimport { fetchStockPrice } from '@/services/stockServices';\nimport { gptAPICall } from '@/services/gptServices';\nimport SideBar from '../components/SideBar.vue';\nexport default {\n  name: 'ChatView',\n  props: ['threadId'],\n  components: {\n    ChatHeader,\n    ChatFrame,\n    MessageComponent,\n    UserInput,\n    SideBar\n  },\n  data() {\n    return {\n      newMessage: '',\n      messages: [],\n      userAvatar: require('@/assets/tri.jpeg'),\n      botAvatar: require('@/assets/bot.png'),\n      currentThread: {},\n      threads: []\n    };\n  },\n  watch: {\n    threadId: {\n      immediate: true,\n      handler(newThreadId) {\n        console.log('Received new thread ID:', newThreadId);\n        if (newThreadId != null) {\n          this.updateCurrentThread(newThreadId);\n        }\n      }\n    }\n  },\n  methods: {\n    clearMessage() {\n      this.newMessage = '';\n    },\n    updateCurrentThread(newThreadId) {\n      console.log(\"Update current thread function triggered: \", newThreadId);\n      const thread = this.threads.find(thread => thread.id.toString() === newThreadId);\n      console.log(thread);\n      if (thread) {\n        this.currentThread = thread;\n        this.messages = thread.messages || [];\n      } else {\n        console.error('Thread with ID', newThreadId, 'not found');\n        this.currentThread = {};\n        this.messages = [];\n      }\n      console.log(\"Current thread: \", this.currentThread);\n    },\n    addThread(newThread) {\n      newThread.id = this.threads.length + 1;\n      this.threads.push(newThread);\n      console.log(\"Added new thread: \", newThread);\n    },\n    editThread(index) {\n      this.threads[index].editing = true;\n    },\n    saveThreadName({\n      newName,\n      index\n    }) {\n      this.threads[index].name = newName;\n      this.threads[index].editing = false;\n    },\n    cancelEdit(index) {\n      this.threads[index].editing = false;\n    },\n    selectThread(index) {\n      this.updateCurrentThread(this.threads[index].id.toString());\n    },\n    async sendMessage(newMessage) {\n      console.log(\"start sending message in send message..\");\n      this.messages.push({\n        text: newMessage.trim(),\n        isUser: true,\n        typing: true,\n        timestamp: new Date().toLocaleTimeString()\n      });\n      this.newMessage = '';\n      const stockCode = this.extractStockCode(this.messages[this.messages.length - 1].text);\n      if (stockCode.length > 0) {\n        try {\n          const price = await fetchStockPrice(stockCode);\n          const timeStamp = new Date().toLocaleTimeString();\n          let responseText = `Giá cổ phiếu ${stockCode} hiện giờ là $${price}, tính theo mốc thời gian ${timeStamp} `;\n          this.addTypingResponse(responseText, false);\n          const analysisQuestion = `Phân tích các số liệu sau từ công ty Tesla Chỉ Số Nâng CaoTên\tCông ty\tNgành\n      Tỉ số P/E TTM\t39.31\t18.18\n  Giá trên doanh thu TTM\t5.66\t3.93\n  Giá và dòng tiền mặt MRQ\t64.94\t16.68\n  Giá và dòng tiền mặt tự do TTM\t388.36\t33.6\n  Giá trên giá ghi sổ sách MRQ\t8.34\t2.67\n  Giá trên sổ sách hữu hình MRQ\t8.39\t0.64\n  Khả năng sinh lợi: TTM đối với Biên Lợi Trung Bình 5 Năm TTM (%)  TB 5 năm (%)\n  Lãi gộp\n  Lãi gộp kinh doanh\n  Tỷ lệ lời trước thuế\n  Hệ số biên lợi nhuận ròng\n  0%\n  5%\n  10%\n  15%\n  20%\n  25%\n  Hệ số biên lợi nhuận ròng\n       TTM (%)\t14.37%\n       TB 5 năm (%)\t7.59%\n  Lãi gộp TTM\t17.78%\t17.76\n  Lãi Gộp 5YA\t21.49%\t14.78\n  Lãi gộp kinh doanh TTM\t7.81%\t-8.16\n  Lãi gộp kinh doanh 5YA\t8.96%\t-2,221.2\n  Tỷ lệ lời trước thuế TTM\t9.21%\t-11.27\n  Tỷ lệ lời trước thuế 5YA\t7.96%\t-2,230.78\n  Hệ số biên lợi nhuận ròng TTM\t14.37%\t-11.97\n  Hệ số biên lợi nhuận ròng 5YA\t7.59%\t-2,209.64\n  Doanh thu/Cổ phần TTM\t29.75\t11,209.08\n  EPS cơ bản ANN\t4.73\t637.24\n  EPS pha loãng ANN\t4.3\t637.15\n  Giá trị sổ sách/Cổ phần MRQ\t20.21\t6,320.76\n  Giá trị sổ sách hữu hình/Cổ phần MRQ\t20.06\t6,055.95\n  Tiền mặt/Cổ phần MRQ\t3.71\t1,383.5\n  Dòng tiền/Cổ phần TTM\t3.45\t-72.97\n       `;\n          const gptResponse = await gptAPICall(analysisQuestion);\n          const gptText = gptResponse.choices[0].message.content;\n          this.addTypingResponse(gptText, false);\n        } catch (error) {\n          console.error('Error:', error);\n          this.messages.push({\n            text: `Error fetching data for ${stockCode}.`,\n            isUser: false,\n            timestamp: new Date().toLocaleTimeString()\n          });\n        }\n      } else {\n        setTimeout(() => {\n          this.addTypingResponse('Tôi là FinBud, trợ lý AI trong lĩnh vực tài chính của bạn, phát triển bởi Bui Dinh Tri. Tôi được cấu hình đặc biệt trên nền tảng GPT-3.5 Turbo, với mục tiêu cung cấp thông tin sâu hơn và chuyên môn về tài chính và thị trường cổ phiếu.', false);\n        }, 300);\n      }\n    },\n    addTypingResponse(text, isUser) {\n      const typingMessage = {\n        text: text,\n        isUser: isUser,\n        typing: true,\n        timestamp: new Date().toLocaleTimeString(),\n        username: isUser ? 'You' : 'FinBud Bot'\n      };\n      this.messages.push(typingMessage);\n      setTimeout(() => {\n        typingMessage.text = text;\n        typingMessage.typing = false;\n        this.$forceUpdate();\n      }, 2000);\n    },\n    extractStockCode(message) {\n      const pattern = /\\b[A-Z]{3,5}\\b/g;\n      const matches = message.match(pattern) || [];\n      return matches;\n    },\n    extractSharesAndCode(message) {\n      const stockCodePattern = /\\b[A-Z]{1,5}\\b/g;\n      const sharesPattern = /(\\b\\d{1,3}(,\\d{3})*\\b)(?=\\s*shares)/gi;\n      const stockCodes = message.match(stockCodePattern) || [];\n      const shares = message.match(sharesPattern) || [];\n      return {\n        stockCodes,\n        shares\n      };\n    }\n  }\n};","map":{"version":3,"names":["ChatHeader","ChatFrame","MessageComponent","UserInput","fetchStockPrice","gptAPICall","SideBar","name","props","components","data","newMessage","messages","userAvatar","require","botAvatar","currentThread","threads","watch","threadId","immediate","handler","newThreadId","console","log","updateCurrentThread","methods","clearMessage","thread","find","id","toString","error","addThread","newThread","length","push","editThread","index","editing","saveThreadName","newName","cancelEdit","selectThread","sendMessage","text","trim","isUser","typing","timestamp","Date","toLocaleTimeString","stockCode","extractStockCode","price","timeStamp","responseText","addTypingResponse","analysisQuestion","gptResponse","gptText","choices","message","content","setTimeout","typingMessage","username","$forceUpdate","pattern","matches","match","extractSharesAndCode","stockCodePattern","sharesPattern","stockCodes","shares"],"sources":["/Users/buidinhtri/Desktop/FindBud/FinBud-AI-bot/src/views/ChatView.vue"],"sourcesContent":["<template>\n  <div class=\"home-container\">\n    <SideBar\n      :threads=\"threads\"\n      @add-thread=\"addThread\"\n      @edit-thread=\"editThread\"\n      @save-thread-name=\"saveThreadName\"\n      @cancel-edit=\"cancelEdit\"\n      @select-thread=\"selectThread\"\n    />\n    <div class=\"chat-container\">\n      <ChatHeader :threadId=\"currentThread.id\" />\n      <ChatFrame>\n        <MessageComponent\n          v-for=\"(message, index) in messages\"\n          :key=\"index\"\n          :is-user=\"message.isUser\"\n          :text=\"message.text\"\n          :typing=\"message.typing\"\n          :timestamp=\"message.timestamp\"\n          :username=\"message.isUser ? 'Tri Bui' : 'FinBud Bot'\"\n          :avatar-src=\"message.isUser ? userAvatar : botAvatar\"\n        />\n      </ChatFrame>\n      <UserInput @send-message=\"sendMessage\" @clear-message=\"clearMessage\" />\n    </div>\n  </div>\n</template>\n\n<script>\nimport ChatHeader from '../components/ChatHeader.vue';\nimport ChatFrame from '../components/ChatFrame.vue';\nimport MessageComponent from '../components/MessageComponent.vue';\nimport UserInput from '../components/UserInput.vue';\nimport { fetchStockPrice } from '@/services/stockServices';\nimport { gptAPICall } from '@/services/gptServices';\nimport SideBar from '../components/SideBar.vue';\n\nexport default {\n  name: 'ChatView',\n  props: ['threadId'],\n  components: {\n    ChatHeader,\n    ChatFrame,\n    MessageComponent,\n    UserInput,\n    SideBar\n  },\n  data() {\n    return {\n      newMessage: '',\n      messages: [],\n      userAvatar: require('@/assets/tri.jpeg'),\n      botAvatar: require('@/assets/bot.png'),\n      currentThread: {},\n      threads: []\n    };\n  },\n  watch: {\n    threadId: {\n      immediate: true,\n      handler(newThreadId) {\n        console.log('Received new thread ID:', newThreadId);\n        if (newThreadId != null) {\n          this.updateCurrentThread(newThreadId);\n        }\n      }\n    },\n  },\n  methods: {\n    clearMessage() {\n      this.newMessage = ''\n    },\n    updateCurrentThread(newThreadId) {\n      console.log(\"Update current thread function triggered: \", newThreadId)\n      const thread = this.threads.find(thread => thread.id.toString() === newThreadId);\n      console.log(thread)\n      if (thread) {\n        this.currentThread = thread;\n        this.messages = thread.messages || [];\n      } else {\n        console.error('Thread with ID', newThreadId, 'not found');\n        this.currentThread = {};\n        this.messages = [];\n      }\n      console.log(\"Current thread: \", this.currentThread)\n    },\n    addThread(newThread) {\n      newThread.id = this.threads.length + 1;\n      this.threads.push(newThread);\n      console.log(\"Added new thread: \", newThread);\n    },\n    editThread(index) {\n      this.threads[index].editing = true;\n    },\n    saveThreadName({ newName, index }) {\n      this.threads[index].name = newName;\n      this.threads[index].editing = false;\n    },\n    cancelEdit(index) {\n      this.threads[index].editing = false;\n    },\n    selectThread(index) {\n      this.updateCurrentThread(this.threads[index].id.toString());\n    },\n    async sendMessage(newMessage) {\n      console.log(\"start sending message in send message..\")\n\n      this.messages.push({\n        text: newMessage.trim(),\n        isUser: true,\n        typing: true,\n        timestamp: new Date().toLocaleTimeString()\n      });\n\n      this.newMessage = '';\n\n      const stockCode = this.extractStockCode(this.messages[this.messages.length - 1].text);\n      if (stockCode.length > 0) {\n        try {\n          const price = await fetchStockPrice(stockCode);\n          const timeStamp = new Date().toLocaleTimeString();\n          let responseText = `Giá cổ phiếu ${stockCode} hiện giờ là $${price}, tính theo mốc thời gian ${timeStamp} `;\n          this.addTypingResponse(responseText, false);\n          const analysisQuestion = `Phân tích các số liệu sau từ công ty Tesla Chỉ Số Nâng CaoTên\tCông ty\tNgành\n      Tỉ số P/E TTM\t39.31\t18.18\n  Giá trên doanh thu TTM\t5.66\t3.93\n  Giá và dòng tiền mặt MRQ\t64.94\t16.68\n  Giá và dòng tiền mặt tự do TTM\t388.36\t33.6\n  Giá trên giá ghi sổ sách MRQ\t8.34\t2.67\n  Giá trên sổ sách hữu hình MRQ\t8.39\t0.64\n  Khả năng sinh lợi: TTM đối với Biên Lợi Trung Bình 5 Năm TTM (%)  TB 5 năm (%)\n  Lãi gộp\n  Lãi gộp kinh doanh\n  Tỷ lệ lời trước thuế\n  Hệ số biên lợi nhuận ròng\n  0%\n  5%\n  10%\n  15%\n  20%\n  25%\n  Hệ số biên lợi nhuận ròng\n       TTM (%)\t14.37%\n       TB 5 năm (%)\t7.59%\n  Lãi gộp TTM\t17.78%\t17.76\n  Lãi Gộp 5YA\t21.49%\t14.78\n  Lãi gộp kinh doanh TTM\t7.81%\t-8.16\n  Lãi gộp kinh doanh 5YA\t8.96%\t-2,221.2\n  Tỷ lệ lời trước thuế TTM\t9.21%\t-11.27\n  Tỷ lệ lời trước thuế 5YA\t7.96%\t-2,230.78\n  Hệ số biên lợi nhuận ròng TTM\t14.37%\t-11.97\n  Hệ số biên lợi nhuận ròng 5YA\t7.59%\t-2,209.64\n  Doanh thu/Cổ phần TTM\t29.75\t11,209.08\n  EPS cơ bản ANN\t4.73\t637.24\n  EPS pha loãng ANN\t4.3\t637.15\n  Giá trị sổ sách/Cổ phần MRQ\t20.21\t6,320.76\n  Giá trị sổ sách hữu hình/Cổ phần MRQ\t20.06\t6,055.95\n  Tiền mặt/Cổ phần MRQ\t3.71\t1,383.5\n  Dòng tiền/Cổ phần TTM\t3.45\t-72.97\n       `;\n          const gptResponse = await gptAPICall(analysisQuestion);\n          const gptText = gptResponse.choices[0].message.content;\n\n          this.addTypingResponse(gptText, false);\n\n        } catch (error) {\n          console.error('Error:', error);\n          this.messages.push({ text: `Error fetching data for ${stockCode}.`, isUser: false, timestamp: new Date().toLocaleTimeString() });\n        }\n      } else {\n        setTimeout(\n          () => {\n            this.addTypingResponse('Tôi là FinBud, trợ lý AI trong lĩnh vực tài chính của bạn, phát triển bởi Bui Dinh Tri. Tôi được cấu hình đặc biệt trên nền tảng GPT-3.5 Turbo, với mục tiêu cung cấp thông tin sâu hơn và chuyên môn về tài chính và thị trường cổ phiếu.', false);\n          }, 300\n        )\n      }\n    },\n\n    addTypingResponse(text, isUser) {\n      const typingMessage = {\n        text: text,\n        isUser: isUser,\n        typing: true,\n        timestamp: new Date().toLocaleTimeString(),\n        username: isUser ? 'You' : 'FinBud Bot'\n      };\n\n      this.messages.push(typingMessage);\n      setTimeout(() => {\n        typingMessage.text = text;\n        typingMessage.typing = false;\n        this.$forceUpdate();\n      }, 2000);\n    },\n\n    extractStockCode(message) {\n      const pattern = /\\b[A-Z]{3,5}\\b/g;\n      const matches = message.match(pattern) || [];\n      return matches;\n    },\n\n    extractSharesAndCode(message) {\n      const stockCodePattern = /\\b[A-Z]{1,5}\\b/g;\n      const sharesPattern = /(\\b\\d{1,3}(,\\d{3})*\\b)(?=\\s*shares)/gi;\n\n      const stockCodes = message.match(stockCodePattern) || [];\n      const shares = message.match(sharesPattern) || [];\n\n      return { stockCodes, shares };\n    }\n  }\n}\n</script>\n\n\n<style scoped>\n.home-container {\n  display: flex;\n  height: 100vh;\n}\n\n.chat-container {\n  display: flex;\n  flex-direction: column;\n  flex: 1;\n}\n</style>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}