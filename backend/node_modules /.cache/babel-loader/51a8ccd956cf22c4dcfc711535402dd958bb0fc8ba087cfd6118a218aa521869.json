{"ast":null,"code":"import axios from 'axios';\nexport default {\n  name: 'QuizComponent',\n  data() {\n    return {\n      keywords: '',\n      question: null,\n      selectedAnswer: null\n    };\n  },\n  methods: {\n    async generateQuiz() {\n      try {\n        const response = await axios.post('/api/generate-quiz', {\n          keywords: this.keywords\n        });\n        this.question = response.data;\n        this.selectedAnswer = null;\n      } catch (error) {\n        console.error('Error generating quiz:', error);\n      }\n    },\n    checkAnswer(index) {\n      this.selectedAnswer = index;\n    }\n  }\n};","map":{"version":3,"names":["axios","name","data","keywords","question","selectedAnswer","methods","generateQuiz","response","post","error","console","checkAnswer","index"],"sources":["/Users/buidinhtri/Desktop/FindBud/FinBud-AI-bot/src/views/QuizzPage.vue"],"sourcesContent":["<template>\n  <div class=\"quiz-container\">\n    <header>\n      <h1>Keyword-Based Quiz</h1>\n      <input type=\"text\" v-model=\"keywords\" placeholder=\"Enter keywords\" />\n      <button @click=\"generateQuiz\">Generate Quiz</button>\n    </header>\n    <div v-if=\"question\" class=\"quiz-content\">\n      <div class=\"question\">\n        <h2>{{ question.text }}</h2>\n      </div>\n      <div class=\"answers\">\n        <button\n          v-for=\"(answer, index) in question.answers\"\n          :key=\"index\"\n          :class=\"{'correct': selectedAnswer === index && answer.correct, 'incorrect': selectedAnswer === index && !answer.correct}\"\n          @click=\"checkAnswer(index)\"\n        >\n          {{ answer.text }}\n        </button>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport axios from 'axios';\n\nexport default {\n  name: 'QuizComponent',\n  data() {\n    return {\n      keywords: '',\n      question: null,\n      selectedAnswer: null,\n    };\n  },\n  methods: {\n    async generateQuiz() {\n      try {\n        const response = await axios.post('/api/generate-quiz', { keywords: this.keywords });\n        this.question = response.data;\n        this.selectedAnswer = null;\n      } catch (error) {\n        console.error('Error generating quiz:', error);\n      }\n    },\n    checkAnswer(index) {\n      this.selectedAnswer = index;\n    },\n  },\n};\n</script>\n\n<style scoped>\n.quiz-container {\n  font-family: Arial, sans-serif;\n  padding: 20px;\n  text-align: center;\n}\n\nheader {\n  margin-bottom: 20px;\n}\n\ninput {\n  padding: 10px;\n  width: 200px;\n  margin-right: 10px;\n}\n\nbutton {\n  padding: 10px 20px;\n  cursor: pointer;\n}\n\n.quiz-content {\n  margin-top: 20px;\n}\n\n.question h2 {\n  margin-bottom: 20px;\n}\n\n.answers button {\n  display: block;\n  width: 100%;\n  padding: 10px;\n  margin: 10px 0;\n  border: 1px solid #ccc;\n  cursor: pointer;\n  transition: background-color 0.3s ease;\n}\n\n.answers button.correct {\n  background-color: #4CAF50; /* Green */\n  color: white;\n}\n\n.answers button.incorrect {\n  background-color: #f44336; /* Red */\n  color: white;\n}\n</style>\n"],"mappings":"AA0BA,OAAOA,KAAI,MAAO,OAAO;AAEzB,eAAe;EACbC,IAAI,EAAE,eAAe;EACrBC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,QAAQ,EAAE,EAAE;MACZC,QAAQ,EAAE,IAAI;MACdC,cAAc,EAAE;IAClB,CAAC;EACH,CAAC;EACDC,OAAO,EAAE;IACP,MAAMC,YAAYA,CAAA,EAAG;MACnB,IAAI;QACF,MAAMC,QAAO,GAAI,MAAMR,KAAK,CAACS,IAAI,CAAC,oBAAoB,EAAE;UAAEN,QAAQ,EAAE,IAAI,CAACA;QAAS,CAAC,CAAC;QACpF,IAAI,CAACC,QAAO,GAAII,QAAQ,CAACN,IAAI;QAC7B,IAAI,CAACG,cAAa,GAAI,IAAI;MAC5B,EAAE,OAAOK,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;MAChD;IACF,CAAC;IACDE,WAAWA,CAACC,KAAK,EAAE;MACjB,IAAI,CAACR,cAAa,GAAIQ,KAAK;IAC7B;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}