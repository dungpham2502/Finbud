{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport NavBar from './components/NavBar.vue';\nimport SideBar from './components/SideBar.vue';\nimport LoginView from './views/LoginView.vue'; // Ensure LoginView is correctly imported\nimport MainContent from './components/MainContent.vue'; // Import MainContent\n\nexport default {\n  name: 'App',\n  components: {\n    NavBar,\n    SideBar,\n    LoginView,\n    MainContent // Register MainContent\n  },\n  data() {\n    return {\n      threads: [],\n      showLogin: false\n    };\n  },\n  methods: {\n    toggleLogin() {\n      this.showLogin = !this.showLogin; // Toggle the display state of LoginView\n    },\n    handleAddThread(newThread) {\n      this.threads.push(newThread);\n    },\n    handleEditThread(index) {\n      this.$set(this.threads[index], 'editing', true);\n    },\n    handleSaveThreadName(data) {\n      this.$set(this.threads[data.index], 'name', data.newName);\n      this.$set(this.threads[data.index], 'editing', false);\n    },\n    handleCancelEdit(index) {\n      this.$set(this.threads[index], 'editing', false);\n    }\n  }\n};","map":{"version":3,"names":["NavBar","SideBar","LoginView","MainContent","name","components","data","threads","showLogin","methods","toggleLogin","handleAddThread","newThread","push","handleEditThread","index","$set","handleSaveThreadName","newName","handleCancelEdit"],"sources":["/Users/buidinhtri/Desktop/FindBud/FinBud-AI-bot/src/App.vue"],"sourcesContent":["<template>\n  <div id=\"app\">\n    <NavBar @login-clicked=\"toggleLogin\"/>\n    <div class=\"content\">\n      <SideBar :threads=\"threads\" \n               @add-thread=\"handleAddThread\"\n               @edit-thread=\"handleEditThread\"\n               @save-thread-name=\"handleSaveThreadName\"\n               @cancel-edit=\"handleCancelEdit\" />\n      <LoginView v-if=\"showLogin\" />\n      <MainContent /> <!-- Add this line here -->\n    </div>\n  </div>\n</template>\n\n<script>\nimport NavBar from './components/NavBar.vue'; \nimport SideBar from './components/SideBar.vue';\nimport LoginView from './views/LoginView.vue'; // Ensure LoginView is correctly imported\nimport MainContent from './components/MainContent.vue'; // Import MainContent\n\nexport default {\n  name: 'App',\n  components: {\n    NavBar,\n    SideBar,\n    LoginView,\n    MainContent, // Register MainContent\n  },\n  data() {\n    return {\n      threads: [],\n      showLogin: false,\n    };\n  },\n  methods: {\n    toggleLogin() {\n      this.showLogin = !this.showLogin; // Toggle the display state of LoginView\n    },\n    handleAddThread(newThread) {\n      this.threads.push(newThread);\n    },\n    handleEditThread(index) {\n      this.$set(this.threads[index], 'editing', true);\n    },\n    handleSaveThreadName(data) {\n      this.$set(this.threads[data.index], 'name', data.newName);\n      this.$set(this.threads[data.index], 'editing', false);\n    },\n    handleCancelEdit(index) {\n      this.$set(this.threads[index], 'editing', false);\n    }\n  }\n}\n</script>\n"],"mappings":";AAgBA,OAAOA,MAAK,MAAO,yBAAyB;AAC5C,OAAOC,OAAM,MAAO,0BAA0B;AAC9C,OAAOC,SAAQ,MAAO,uBAAuB,EAAE;AAC/C,OAAOC,WAAU,MAAO,8BAA8B,EAAE;;AAExD,eAAe;EACbC,IAAI,EAAE,KAAK;EACXC,UAAU,EAAE;IACVL,MAAM;IACNC,OAAO;IACPC,SAAS;IACTC,WAAW,CAAE;EACf,CAAC;EACDG,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,OAAO,EAAE,EAAE;MACXC,SAAS,EAAE;IACb,CAAC;EACH,CAAC;EACDC,OAAO,EAAE;IACPC,WAAWA,CAAA,EAAG;MACZ,IAAI,CAACF,SAAQ,GAAI,CAAC,IAAI,CAACA,SAAS,EAAE;IACpC,CAAC;IACDG,eAAeA,CAACC,SAAS,EAAE;MACzB,IAAI,CAACL,OAAO,CAACM,IAAI,CAACD,SAAS,CAAC;IAC9B,CAAC;IACDE,gBAAgBA,CAACC,KAAK,EAAE;MACtB,IAAI,CAACC,IAAI,CAAC,IAAI,CAACT,OAAO,CAACQ,KAAK,CAAC,EAAE,SAAS,EAAE,IAAI,CAAC;IACjD,CAAC;IACDE,oBAAoBA,CAACX,IAAI,EAAE;MACzB,IAAI,CAACU,IAAI,CAAC,IAAI,CAACT,OAAO,CAACD,IAAI,CAACS,KAAK,CAAC,EAAE,MAAM,EAAET,IAAI,CAACY,OAAO,CAAC;MACzD,IAAI,CAACF,IAAI,CAAC,IAAI,CAACT,OAAO,CAACD,IAAI,CAACS,KAAK,CAAC,EAAE,SAAS,EAAE,KAAK,CAAC;IACvD,CAAC;IACDI,gBAAgBA,CAACJ,KAAK,EAAE;MACtB,IAAI,CAACC,IAAI,CAAC,IAAI,CAACT,OAAO,CAACQ,KAAK,CAAC,EAAE,SAAS,EAAE,KAAK,CAAC;IAClD;EACF;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}